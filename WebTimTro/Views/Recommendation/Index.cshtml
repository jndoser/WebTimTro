@using static WebTimTro.Models.SearchPhongTroOptionsVM
@using Microsoft.AspNetCore.Identity
@using WebTimTro.Data
@inject SignInManager<NguoiDung> SignInManager
@inject UserManager<NguoiDung> UserManager


@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<input hidden id="loginStatus" value="@(SignInManager.IsSignedIn(User) ? 1 : 0)" />
<div class="row mb-5 load-list" style="margin-left:10px;">
</div>
<input hidden id="searchStatus" value="0" />
<div class="demo-inline-spacing" style="margin-left:20px;">
    <!-- Basic Pagination -->
    <nav aria-label="Page navigation">
        <ul class="pagination" id="load-pagination">
        </ul>
    </nav>
    <!--/ Basic Pagination -->
</div>

<script>
    $(function() {
            $('#searchStatus').val(0);
            // function load pagination
            var load = function(txtSearch, page) {
                $.ajax({
                    url: '/Recommendation/GetAllPost',
                    type: 'get',
                    data: { txtSearch: txtSearch, page: page },
                    success: function(result) {
                        console.log(result);
                        console.log('score: ');
                        console.log(result.scores);

                        var str = "";
                        $.each(result.data, function(index, value) {
                            str += '<div class="col-md-6 col-lg-4">';
                            str += '<h6 class="mt-2 text-muted"></h6>';
                            str += '<div class="card">';
                            str += '<img style="width:338px;height:225px;" class="card-img-top" src="/images/' + result.firstHinhAnhs[index] + '" alt="Card image cap">';
                            str += '<div class="card-body">';
                            str += '<h5 class="card-title">' + value.ten + '</h5>';
                            str += '<p class="card-text">' + value.sucChua + ' người ở</p>';
                            str += '</div>';
                            str += '<ul class="list-group list-group-flush">';
                            str += '<li class="list-group-item">' + result.someDichVu[index] + '</li>';
                            str += '<li class="list-group-item">Giá: ' + formatCurrency(value.gia) + ' VND </li>';
                            str += '</ul>';
                            str += '<div class="card-body row">';
                            str += '<div id="numbersOfLike' + value.id + '" class="card-text col-lg-2">' + result.quanTams[index] + '</div>';
                            str += '<div class="card-text col-lg-7"> người quan tâm</div>'
                            str += '</div>';
                            str += '<div class="card-body">';
                            str += '<a id="isQuanTamPhongTro' + value.id + '" style="cursor:pointer;" onclick="QuanTam(' + value.id + ')" class="card-link">';
                            str += '' + result.favStatusList[index] + '</a>';
                            str += '<a href="/Home/Detail/' + value.id + '" class="card-link">Xem phòng trọ</a>';
                            str += '<a id="isSavedPhongTro' + value.id + '" style="cursor:pointer;" onclick="Save(' + value.id + ')" class="card-link">';
                            str += '' + result.savedStatusList[index] + '</a>';
                            str += '</div>';
                            str += '</div>';
                            str += '</div>';

                            // Create pagination
                            var pagination_string = "";
                            var pageCurrent = result.pageCurrent;
                            var numSize = result.numSize;

                            // Create button previous
                            if (pageCurrent > 1) {
                                var pagePrevious = pageCurrent - 1;
                                pagination_string += '<li class="page-item">';
                                pagination_string += '<a class="page-link" href="" data-page="' + pagePrevious + '">Previous</a>';
                                pagination_string += '</li>';
                            }

                            for (var i = 1; i <= numSize; i++) {
                                if (i == pageCurrent) {
                                    pagination_string += '<li class="page-item active">';
                                    pagination_string += '<a class="page-link" href="" data-page="' + i + '">' + pageCurrent + '</a>';
                                    pagination_string += '</li>';
                                } else {
                                    pagination_string += '<li class="page-item">';
                                    pagination_string += '<a class="page-link" href="" data-page="' + i + '">' + i + '</a>';
                                    pagination_string += '</li>';
                                }
                            }

                            // Create button next
                            if (pageCurrent > 0 && pageCurrent < numSize) {
                                var pageNext = pageCurrent + 1;
                                pagination_string += '<li class="page-item">';
                                pagination_string += '<a class="page-link" href="" data-page="' + pageNext + '">Next</a>';
                                pagination_string += '</li>';
                            }

                            // Load pagination
                            $("#load-pagination").html(pagination_string);
                        });

                        // Load str to class="load-list"
                        $(".load-list").html(str);
                    }
                });
            }



            // Click event pagination
            $("body").on("click", ".pagination li a", function(event) {
                event.preventDefault();
                var page = $(this).attr('data-page');
                var searchStatus = $('#searchStatus').val();

                if (searchStatus == 0) {
                    console.log('searchStatus: ' + searchStatus);
                    // Load event pagination
                    var txtSearch = $('.txtSearch').val();
                    if (txtSearch != "") {
                        load(txtSearch, page);
                    } else {
                        load(null, page);
                    }
                } else if (searchStatus == 1) {
                    console.log('searchStatus: ' + searchStatus);
                    StartSearch(page);
                } else {
                    console.log('searchStatus: ' + searchStatus);
                    StartFilter(page, 1);
                }

            });

            // Click event search
            //$('#search').click(function() {
            //    var txtSearch = $('.txtSearch').val();
            //    if(txtSearch != ''){
            //        load(txtSearch, 1);
            //    } else {
            //        load(null, 1);
            //        }
            //    });
            //});

            // Load init
            load(null, 1);
        });

    function formatCurrency(numb) {
        var str = numb.toString().split(".");
        str[0] = str[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
        return str.join(".");
    }
</script>